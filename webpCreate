#!/bin/zsh
setopt null_glob

echo "üõ†  Running webpCreate in: $(pwd)"

# Check cwebp
if ! command -v cwebp &> /dev/null; then
  echo "‚ùå cwebp not found. Install with: brew install webp"
  exit 1
fi

# Initialize
converted_jpg=false
converted_png=false
jpg_count=0
png_count=0
webp_count=0
jpg_size=0
png_size=0
webp_size=0
ghost_files=()

human_size() {
  bytes=$1
  echo "$((bytes / 1024 / 1024)).$(( (bytes / 1024) % 1024 * 100 / 1024 )) MB"
}

ask_file_action() {
  local file="$1"
  while true; do
    echo "‚ö†Ô∏è  '$file' already exists in WEBP/. (o)verwrite / (i)ncrement / (s)kip?"
    read -sk1 choice
    echo ""
    case $choice in
      o|O) return 0 ;;
      i|I) return 1 ;;
      s|S) return 2 ;;
      *) echo "‚ùì Invalid choice. Press o, i, or s." ;;
    esac
  done
}

convert_and_handle_conflict() {
  local input="$1"
  local base="${input%.*}"
  local out="${base}.webp"

  mkdir -p WEBP

  if [[ -e "WEBP/$out" ]]; then
    ask_file_action "$out"
    action=$?
    if [[ $action -eq 0 ]]; then
      cwebp -q 80 "$input" -o "$out"
    elif [[ $action -eq 1 ]]; then
      n=1
      while [[ -e "WEBP/${base}_$n.webp" ]]; do ((n++)); done
      out="${base}_$n.webp"
      cwebp -q 80 "$input" -o "$out"
    else
      return 1
    fi
  else
    cwebp -q 80 "$input" -o "$out"
  fi

  [[ -e "$out" ]] && mv "$out" WEBP/ && return 0
  return 1
}

# --- Ghost file detector ---
check_ghosts() {
  local arr=()
  for file in "$@"; do
    [[ -e "$file" && ! -f "$file" ]] && arr+=("$file")
  done
  echo "${arr[@]}"
}

# --- File matching ---
jpg_files=( *.jpg(N) *.JPG(N) *.jpeg(N) *.JPEG(N) )
png_files=( *.png(N) *.PNG(N) )
all_files=("${jpg_files[@]}" "${png_files[@]}")

# --- Check for ghost files ---
ghosts=($(check_ghosts "${all_files[@]}"))
ghost_count=${#ghosts[@]}

if (( ghost_count > 0 )); then
  echo "‚ö†Ô∏è  Detected $ghost_count ghost (not fully downloaded) file(s):"
  for g in $ghosts; do echo " - $g"; done
  echo ""
  echo "What would you like to do?"
  echo "  [1] Proceed with downloaded files only"
  echo "  [2] Attempt to sync/download missing files (may use lots of drive space)"
  echo "  [3] Quit"
  echo -n "Enter choice: "
  read choice
  case $choice in
    1) echo "‚úÖ Continuing with available files only...";;
    2) echo "‚ö†Ô∏è  Sync not implemented. Please open these files manually in Finder to force download, then re-run."; exit 2 ;;
    *) echo "üëã Exiting."; exit 0 ;;
  esac
fi

# --- Convert JPG/JPEG ---
if (( ${#jpg_files[@]} > 0 )); then
  mkdir -p JPG
  for file in $jpg_files; do
    [[ -f "$file" ]] || continue
    size=$(stat -f%z "$file")
    if convert_and_handle_conflict "$file"; then
      mv "$file" JPG/
      ((jpg_count++))
      ((jpg_size+=size))
      converted_jpg=true
    fi
  done
fi

# --- Convert PNG ---
if (( ${#png_files[@]} > 0 )); then
  mkdir -p PNG
  for file in $png_files; do
    [[ -f "$file" ]] || continue
    size=$(stat -f%z "$file")
    if convert_and_handle_conflict "$file"; then
      mv "$file" PNG/
      ((png_count++))
      ((png_size+=size))
      converted_png=true
    fi
  done
fi

# --- Count WEBP output ---
webp_files=(WEBP/*.webp(N))
for w in $webp_files; do
  size=$(stat -f%z "$w")
  ((webp_count++))
  ((webp_size+=size))
done

# --- Summary ---
total_input_size=$((jpg_size + png_size))
total_saved=$((total_input_size - webp_size))

echo ""
echo "‚úÖ Conversion Summary:"
[[ $jpg_count -gt 0 ]] && echo " - Converted JPG/JPEG files: $jpg_count ‚Üí $(human_size $jpg_size)"
[[ $png_count -gt 0 ]] && echo " - Converted PNG files:      $png_count ‚Üí $(human_size $png_size)"
[[ $webp_count -gt 0 ]] && echo " - Converted WEBP files:     $webp_count ‚Üí $(human_size $webp_size)"

if (( total_input_size > 0 && webp_size > 0 )); then
  percent=$(( (total_saved * 1000 / total_input_size + 5) / 10 ))
  echo " - Total Original Size:      $(human_size $total_input_size)"
  echo " - Total WEBP Size:          $(human_size $webp_size)"
  echo " - Size Savings:             $(human_size $total_saved) ($percent% reduction)"
elif (( total_input_size > 0 )); then
  echo "‚ö†Ô∏è  No .webp files created despite original file conversion attempts."
else
  echo "‚ùå No files were converted."
fi
